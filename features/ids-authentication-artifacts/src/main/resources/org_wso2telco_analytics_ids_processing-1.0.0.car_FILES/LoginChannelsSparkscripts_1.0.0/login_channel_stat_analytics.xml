<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>login_channel_stat_analytics</Name>
    <Script>
        create temporary table auth_endpoint_login_channel using CarbonAnalytics options (tableName "COM_WSO2TELCO_AUTHORIZATION_ENDPOINT", schema "requestType STRING, appID STRING, isAuthenticated BOOLEAN, authenticatorMethods STRING, authenticatorEndTime LONG, authenticatorStartTime LONG, sessionID STRING, isNewUser BOOLEAN, operator STRING, userAgent STRING, msisdn STRING, internalCustomerReference STRING, serverHost STRING, requestURL STRING, httpMethod STRING, urlParams STRING, requestStatus STRING, returnedError STRING, transactionID STRING, consentTimestamp LONG, consentState STRING, consentType STRING, isAuthCodeIssued BOOLEAN, state STRING,nonce STRING, scope STRING, acrValue INTEGER, isMsisdnHeader BOOLEAN, ipHeader STRING, loginHint STRING, telcoScope STRING, _timestamp LONG -i",  incrementalParams "auth_endpoint_loginChannels, DAY");

        create temporary table loginChannels using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_LOGIN_CHANNELS", schema "day STRING -i, operator STRING -i, appID STRING -i, ussd_logins LONG -i,ussd_pin_logins LONG -i,sms_logins LONG -i, he_logins LONG -i, total_count LONG -i, _timestamp LONG -i", primaryKeys "day, operator, appID", incrementalParams "login_channels, DAY");

        INSERT INTO TABLE loginChannels SELECT min(day), operator, appID,
        SUM(IF(status = 'USSDAuthenticator',1,0)) as ussd_logins,
        SUM(IF(status = 'USSDPinAuthenticator' OR status = 'USSDPINAuthenticator',1,0)) as ussd_pin_logins,
        SUM(IF(status = 'SMSAuthenticator',1,0)) as sms_logins,
        SUM(IF(status = 'HeaderEnrichment' OR status = 'HeaderEnrichmentAuthenticator',1,0)) as he_logins,
        count(*) as total_logins, _timestamp 
		FROM (	SELECT sessionID,getDateString(max(_timestamp)) as day, min(operator) as operator, min(appID) as appID, getAuthenticator(max(authenticatorMethods)) as status, getDateTimestamp(max(_timestamp)) as _timestamp 	FROM auth_endpoint_login_channel WHERE isAuthenticated = true and operator IS NOT NULL and appID IS NOT NULL and msisdn IS NOT NULL group by sessionID ) temp GROUP BY operator, appID, _timestamp;

        create temporary table loginChannels_per_operator using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_OPERATOR_LOGIN_CHANNELS", schema "day STRING -i, operator STRING -i -f, ussd_logins LONG -i,ussd_pin_logins LONG -i, sms_logins LONG -i, he_logins LONG -i, total_count LONG -i, _timestamp LONG -i", primaryKeys "day, operator");

        INSERT INTO TABLE loginChannels_per_operator SELECT day, operator,
        SUM(ussd_logins) as ussd_logins, SUM(ussd_pin_logins) as ussd_pin_logins, SUM(sms_logins) as sms_logins, SUM(he_logins) as he_logins,
        SUM(total_count) as total_count, _timestamp FROM loginChannels GROUP BY day, operator, _timestamp;

        create temporary table loginChannels_per_app using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_APP_LOGIN_CHANNELS", schema "day STRING -i, appID STRING -i -f, ussd_logins LONG -i,ussd_pin_logins LONG -i, sms_logins LONG -i, he_logins LONG -i, total_count LONG -i, _timestamp LONG -i", primaryKeys "day, appID");

        INSERT INTO TABLE loginChannels_per_app SELECT day, appID,
        SUM(ussd_logins) as ussd_logins, SUM(ussd_pin_logins) as ussd_pin_logins, SUM(sms_logins) as sms_logins, SUM(he_logins) as he_logins,
        SUM(total_count) as total_count, _timestamp FROM loginChannels GROUP BY day, appID, _timestamp;

        create temporary table loginChannels_total using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_TOTAL_LOGIN_CHANNELS", schema "day STRING -i, ussd_logins LONG -i,ussd_pin_logins LONG -i, sms_logins LONG -i, he_logins LONG -i, total_count LONG -i, _timestamp LONG -i", primaryKeys "day");

        INSERT INTO TABLE loginChannels_total SELECT day,
        SUM(ussd_logins) as ussd_logins, SUM(ussd_pin_logins) as ussd_pin_logins, SUM(sms_logins) as sms_logins, SUM(he_logins) as he_logins,
        SUM(total_count) as total_count, _timestamp FROM loginChannels GROUP BY day, _timestamp;

        INCREMENTAL_TABLE_COMMIT auth_endpoint_loginChannels;
        INCREMENTAL_TABLE_COMMIT login_channels;
    </Script>
    <CronExpression>0 0 0 1/1 * ? *</CronExpression>
</Analytics>
