<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>daily_registrations_stat_analytics</Name>
    <Script>
        create temporary table user_status_raw_daily_reg using CarbonAnalytics options (tableName "COM_WSO2TELCO_USERSTATUS", schema "sessionID STRING,status STRING,sourceIP STRING,forwardedIP STRING,_timestamp LONG,msisdn STRING,isNewUser BOOLEAN -i",  incrementalParams "user_status_dailyReg, DAY");

        create temporary table user_status_meta_raw_daily_reg using CarbonAnalytics options (tableName "COM_WSO2TELCO_USERSTATUS_META", schema "sessionID STRING,sourceIP STRING,operator STRING,appId STRING,isMSISDNHeader BOOLEAN,userAgent STRING,consumerKey STRING,state STRING,nonce STRING,scope STRING,acrValue STRING,loginHint STRING,telcoScope STRING,status STRING,_timestamp LONG -i",  incrementalParams "user_status_meta_dailyReg, DAY");

        create temporary table daily_registrations_summary using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_DAILY_REGISTRATIONS", schema "day STRING -i, operator STRING -i, appID STRING -i, regCount LONG -i, _timestamp LONG -i", primaryKeys "day, operator, appID");

        create temporary table daily_registrations_operator_summary using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_OPERATOR_DAILY_REGISTRATIONS", schema "day STRING -i, operator STRING -i, regCount LONG -i, _timestamp LONG -i", primaryKeys "day, operator");

        create temporary table daily_registrations_app_summary using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_APP_DAILY_REGISTRATIONS", schema "day STRING -i, appID STRING -i, regCount LONG -i, _timestamp LONG -i", primaryKeys "day, appID");

        create temporary table daily_registrations_total_summary using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_TOTAL_DAILY_REGISTRATIONS", schema "day STRING -i, regCount LONG -i, _timestamp LONG -i", primaryKeys "day");


        INSERT INTO TABLE daily_registrations_summary SELECT getDateString(first(meta._timestamp)) as day,first(meta.operator) as operator,first(meta.appId) as appId, count(distinct(raw.sessionID)) as regCount, first(getDateTimestamp(meta._timestamp)) as dayTimestamp FROM( SELECT sessionID FROM user_status_raw_daily_reg WHERE status='LOGIN_SUCCESS' and isNewUser=true except SELECT sessionID FROM user_status_raw_daily_reg WHERE status ='FED_IDP_AUTH_PROCESSING') as raw LEFT JOIN user_status_meta_raw_daily_reg as meta ON meta.sessionID=raw.sessionID GROUP BY getDateString(meta._timestamp);

        INSERT INTO TABLE daily_registrations_operator_summary SELECT day, operator, SUM(regCount), _timestamp FROM daily_registrations_summary GROUP BY day, operator, _timestamp;

        INSERT INTO TABLE daily_registrations_app_summary SELECT day, appID, SUM(regCount), _timestamp FROM daily_registrations_summary GROUP BY day, appID, _timestamp;

        INSERT INTO TABLE daily_registrations_total_summary SELECT day, SUM(regCount), _timestamp FROM daily_registrations_summary GROUP BY day, _timestamp;

        create temporary table daily_registrations_temp using CarbonAnalytics options (tableName "COM_WSO2TELCO_TEMP_DAILY_REGISTRATIONS", schema "day STRING -i, operator STRING -i, appID STRING -i, regCount LONG -i, _timestamp LONG -i", primaryKeys "day, operator, appID");

        create temporary table daily_registrations_temp2 using CarbonAnalytics options (tableName "COM_WSO2TELCO_TEMP_DAILY_REGISTRATIONS", schema "day STRING -i, operator STRING -i, appID STRING -i, regCount LONG -i, _timestamp LONG -i", primaryKeys "day, operator, appID");

        INSERT INTO TABLE daily_registrations_temp select day,operator, appID, regCount, _timestamp  from daily_registrations_summary;

        create temporary table daily_registrations_aggregations using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_DAILY__REGISTRATIONS_AGGREGATIONS", schema "day STRING -i, operator STRING -i, appID STRING -i, totalCount LONG -i, _timestamp LONG -i", primaryKeys "day, operator, appID");

        INSERT INTO TABLE daily_registrations_temp2 SELECT getDateString(31516200000), da.operator, da.appID, da.totalCount, 31516200000 FROM  daily_registrations_aggregations as da JOIN (SELECT min(_timestamp) as minTimestamp from daily_registrations_temp) temp on da._timestamp = (temp.minTimestamp - 86400000);

        INSERT INTO TABLE daily_registrations_aggregations SELECT dt1.day, dt1.operator, dt1.appID, SUM(dt2.regCount), dt1._timestamp FROM  daily_registrations_temp as dt1 INNER JOIN daily_registrations_temp2 as dt2 ON dt1._timestamp = dt2._timestamp AND dt1.operator = dt2.operator AND dt1.appID = dt2.appID GROUP BY dt1.day, dt1.operator, dt1.appID, dt1._timestamp;


        create temporary table daily_registrations_operator_temp using CarbonAnalytics options (tableName "COM_WSO2TELCO_TEMP_OPERATOR_DAILY_REGISTRATIONS", schema "day STRING -i, operator STRING -i, regCount LONG -i, _timestamp LONG -i", primaryKeys "day, operator");

        create temporary table daily_registrations_operator_temp2 using CarbonAnalytics options (tableName "COM_WSO2TELCO_TEMP_OPERATOR_DAILY_REGISTRATIONS", schema "day STRING -i, operator STRING -i, regCount LONG -i, _timestamp LONG -i", primaryKeys "day, operator");

        create temporary table operator_daily_registrations_aggregations using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_OPERATOR_DAILY__REGISTRATIONS_AGGREGATIONS", schema "day STRING -i, operator STRING -i, totalCount LONG -i, _timestamp LONG -i", primaryKeys "day, operator");

        create temporary table total_daily_registrations_aggregations using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_TOTAL_DAILY__REGISTRATIONS_AGGREGATIONS", schema "day STRING -i, totalCount LONG -i, _timestamp LONG -i", primaryKeys "day");

        INSERT INTO TABLE daily_registrations_operator_temp select day,operator, regCount, _timestamp  from daily_registrations_operator_summary;

        INSERT INTO TABLE daily_registrations_operator_temp2 SELECT getDateString(31516200000), da.operator, da.totalCount, 31516200000 FROM  operator_daily_registrations_aggregations as da JOIN (SELECT min(_timestamp) as minTimestamp from daily_registrations_operator_temp) temp on da._timestamp = (temp.minTimestamp - 86400000);

        INSERT INTO TABLE operator_daily_registrations_aggregations SELECT dt1.day, dt1.operator,SUM(dt2.regCount), dt1._timestamp FROM  daily_registrations_operator_temp as dt1 INNER JOIN daily_registrations_operator_temp2 as dt2 ON dt1._timestamp = dt2._timestamp AND dt1.operator = dt2.operator GROUP BY dt1.day, dt1.operator, dt1._timestamp;

        INSERT INTO TABLE total_daily_registrations_aggregations SELECT day, SUM(totalCount), _timestamp from operator_daily_registrations_aggregations GROUP BY day, _timestamp;


        INCREMENTAL_TABLE_COMMIT user_status_dailyReg;
        INCREMENTAL_TABLE_COMMIT user_status_meta_dailyReg;
    </Script>
    <CronExpression>0 0 0 1/1 * ? *</CronExpression>
</Analytics>
