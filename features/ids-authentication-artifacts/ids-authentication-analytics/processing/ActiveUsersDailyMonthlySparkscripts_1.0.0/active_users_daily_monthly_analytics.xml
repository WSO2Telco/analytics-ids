<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>active_users_daily_monthly_analytics</Name>
    <Script>
		create temporary table user_status_meta_raw_act_usrs using CarbonAnalytics options (tableName "COM_WSO2TELCO_USERSTATUS_META", schema "sessionID STRING,sourceIP STRING,operator STRING,appId STRING,msisdn STRING,isMSISDNHeader BOOLEAN,userAgent STRING,consumerKey STRING,state STRING,nonce STRING,scope STRING,acrValue STRING,loginHint STRING,isNewUser BOOLEAN,telcoScope STRING,status STRING,_timestamp LONG -i",  incrementalParams "user_status_meta_active_users_daily_monthly, DAY");

create temporary table active_users_daily using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_ACTIVE_USERS_DAILY",schema "day STRING -i, operator STRING -i, appID STRING -i,total_usercount LONG -i, _timestamp LONG -i", primaryKeys "day, operator, appID");



        INSERT INTO TABLE active_users_daily 
		SELECT getDateString(dayTimestamp), operator, appId, COUNT(msisdn) as total_usercount,dayTimestamp 
		FROM ( 
				select  distinct min(msisdn) as msisdn, getDateTimestamp(first(_timestamp)) as dayTimestamp, first(operator) as operator, first(appId) as appId
				from user_status_meta_raw_act_usrs where msisdn IS NOT NULL GROUP BY sessionID
			) as temp GROUP BY dayTimestamp, operator, appId;



        create temporary table active_users_daily_per_operator using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_OPERATOR_ACTIVE_USERS_DAILY", schema "day STRING -i, operator STRING -i -f, total_usercount LONG -i, timestamp STRING -i,  _timestamp LONG -i", primaryKeys "day, operator");

        INSERT INTO TABLE active_users_daily_per_operator
		SELECT getDateString(dayTimestamp), operator, COUNT(msisdn) as total_usercount,dayTimestamp ,dayTimestamp 
		FROM ( 
				select  distinct min(msisdn) as msisdn, getDateTimestamp(first(_timestamp)) as dayTimestamp, first(operator) as operator
				from user_status_meta_raw_act_usrs where msisdn IS NOT NULL GROUP BY sessionID
			) as temp GROUP BY dayTimestamp, operator;


        create temporary table active_users_daily_per_app using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_APP_ACTIVE_USERS_DAILY", schema "day STRING -i, appID STRING -i -f, total_usercount LONG -i, _timestamp LONG -i", primaryKeys "day, appID");

        INSERT INTO TABLE active_users_daily_per_app 
		SELECT getDateString(dayTimestamp), appId, COUNT(msisdn) as total_usercount,dayTimestamp 
		FROM ( 
				select  distinct min(msisdn) as msisdn, getDateTimestamp(first(_timestamp)) as dayTimestamp, first(appId) as appId
				from user_status_meta_raw_act_usrs where msisdn IS NOT NULL GROUP BY sessionID
			) as temp GROUP BY dayTimestamp, appId;

		

        create temporary table active_users_daily_total using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_TOTAL_ACTIVE_USERS_DAILY", schema "day STRING -i, total_usercount LONG -i, _timestamp LONG -i", primaryKeys "day");



        INSERT INTO TABLE active_users_daily_total
		SELECT getDateString(dayTimestamp), COUNT(msisdn) as total_usercount,dayTimestamp 
		FROM ( 
				select  distinct min(msisdn) as msisdn, getDateTimestamp(first(_timestamp)) as dayTimestamp 
				from user_status_meta_raw_act_usrs where msisdn IS NOT NULL GROUP BY sessionID
			) as temp GROUP BY dayTimestamp;


        create temporary table active_users_monthly using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_ACTIVE_USERS_MONTHLY",schema "month STRING -i, operator STRING -i, appID STRING -i,total_usercount LONG -i, _timestamp LONG -i", primaryKeys "month, operator, appID");



        INSERT INTO TABLE active_users_monthly
			SELECT getMonthString(monthTimestamp), operator, appId, COUNT(msisdn) as total_usercount, monthTimestamp
			FROM (  
					select  distinct min(msisdn) as msisdn, getMonthTimestamp(first(_timestamp)) as monthTimestamp, first(operator) as operator, first(appId) as appId
					from user_status_meta_raw_act_usrs where msisdn IS NOT NULL GROUP BY sessionID
				) as temp GROUP BY monthTimestamp,operator, appId;




        create temporary table active_users_monthly_per_operator using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_OPERATOR_ACTIVE_USERS_MONTHLY", schema "month STRING -i, operator STRING -i -f, total_usercount LONG -i ,timestamp STRING -i, _timestamp LONG -i", primaryKeys "month, operator");



        INSERT INTO TABLE active_users_monthly_per_operator
			SELECT getMonthString(monthTimestamp), operator, COUNT(msisdn) as total_usercount, monthTimestamp, monthTimestamp
			FROM (  
					select  distinct min(msisdn) as msisdn, getMonthTimestamp(first(_timestamp)) as monthTimestamp, first(operator) as operator
					from user_status_meta_raw_act_usrs where msisdn IS NOT NULL GROUP BY sessionID
				) as temp GROUP BY monthTimestamp,operator;
			

        create temporary table active_users_monthly_per_app using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_APP_ACTIVE_USERS_MONTHLY", schema "month STRING -i, appID STRING -i -f, total_usercount LONG -i, _timestamp LONG -i", primaryKeys "month, appID");



        INSERT INTO TABLE active_users_monthly_per_app 
				SELECT getMonthString(monthTimestamp),  appId, COUNT(msisdn) as total_usercount, monthTimestamp
				FROM (  
						select  distinct min(msisdn) as msisdn, getMonthTimestamp(first(_timestamp)) as monthTimestamp, first(appId) as appId
						from user_status_meta_raw_act_usrs where msisdn IS NOT NULL GROUP BY sessionID
					) as temp GROUP BY monthTimestamp, appId;
			


        create temporary table active_users_monthly_total using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_TOTAL_ACTIVE_USERS_MONTHLY", schema "month STRING -i, total_usercount LONG -i, _timestamp LONG -i", primaryKeys "month");



        INSERT INTO TABLE active_users_monthly_total
				SELECT getMonthString(monthTimestamp), COUNT(msisdn) as total_usercount, monthTimestamp
				FROM (  
						select  distinct min(msisdn) as msisdn, getMonthTimestamp(first(_timestamp)) as monthTimestamp
						from user_status_meta_raw_act_usrs where msisdn IS NOT NULL GROUP BY sessionID
					) as temp GROUP BY monthTimestamp;


        INCREMENTAL_TABLE_COMMIT user_status_meta_active_users_daily_monthly;
    </Script>
    <CronExpression>0 0 0 1/1 * ? *</CronExpression>
</Analytics>
