<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>ussd_logs_stat_analytics</Name>
    <Script>
         create temporary table daily_ussd_analysis_raw using CarbonAnalytics options (tableName "COM_WSO2TELCO_DAILYUSSDLOGS", schema "type STRING, sequenceNo INTEGER, isOut BOOLEAN, msisdn LONG, sessionStatus BOOLEAN, message STRING, operator STRING, ussdType STRING, timestamp LONG, ussdSession STRING,messageId STRING, _timestamp LONG -i",  incrementalParams "daily_ussd_ussdLogs, DAY");

        create temporary table ussd_logs_summary using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_USSD_ANALYSIS", schema "day STRING -i, operator STRING -i, totalcount LONG -i,yescount LONG -i,nocount LONG -i,invalidcount LONG -i,cancelcount LONG -i,timeoutcount LONG -i,unknown LONG -i, _timestamp LONG -i", primaryKeys "day, operator");

        INSERT INTO table ussd_logs_summary select getDateString(_timestamp),operator,totalcount,yescount,nocount,invalidcount,cancelcount,timeoutcount,(totalcount-(yescount+nocount+invalidcount+cancelcount+timeoutcount)) as unknown,_timestamp from ( 
	select ussdtotal.operator, ussdtotal._timestamp , checkNullforLong(totalcount) as totalcount, checkNullforLong(yescount) as yescount, checkNullforLong(nocount) as nocount, checkNullforLong(invalidcount) as invalidcount, checkNullforLong(cancelcount) as cancelcount,  checkNullforLong(timeoutcount) as timeoutcount from ( 
		select operator, _timestamp, count(sessionStatus) as totalcount from 	( 
			select sessionStatus,operator,getDateTimestamp(timestamp)  as _timestamp   from daily_ussd_analysis_raw where type ="SUBYN" and ussdType="smpp" ) as gbtotalussd group by operator,_timestamp ) as ussdtotal 
	left join ( 
		select operator, _timestamp, count(sessionStatus) as yescount from ( 
			select sessionStatus,operator,getDateTimestamp(timestamp)  as _timestamp from daily_ussd_analysis_raw where type ="USRRSP" and ussdType="smpp"  and ( LOWER(message) = "1" or LOWER(message) = "ok" or LOWER(message) = "yes" or LOWER(message) = "y" ) ) as gbyesussd group by operator,_timestamp ) as yestotal on ussdtotal.operator=yestotal.operator and ussdtotal._timestamp=yestotal._timestamp 
	left join ( select operator, _timestamp, count(sessionStatus) as nocount from ( 
		select sessionStatus,operator,getDateTimestamp(timestamp)  as _timestamp from daily_ussd_analysis_raw where type ="USRRSP" and ussdType="smpp" and  ( LOWER(message) = "2" or LOWER(message) = "no" or LOWER(message) = "n") ) as gbnoussd group by operator,_timestamp ) as nototal on ussdtotal.operator=nototal.operator and ussdtotal._timestamp=nototal._timestamp 
	left join ( select operator, _timestamp, count(sessionStatus) as invalidcount from ( 
			select sessionStatus,operator,getDateTimestamp(timestamp)  as _timestamp   from daily_ussd_analysis_raw where type ="USRRSP" and ussdType="smpp"  and ( LOWER(message) != "1" and LOWER(message) != "ok" and LOWER(message) != "yes" and LOWER(message) != "y"  and LOWER(message) != "2" and LOWER(message) != "no" and LOWER(message) != "n" ) and sessionStatus=true ) as gbinvalidussd group by operator,_timestamp ) as invalidtotal on ussdtotal.operator=invalidtotal.operator and ussdtotal._timestamp=invalidtotal._timestamp 
	left join ( 
		select operator, _timestamp, count(sessionStatus) as cancelcount from ( 
			select sessionStatus,operator,getDateTimestamp(timestamp)  as _timestamp from daily_ussd_analysis_raw where type ="USRRSP" and ussdType="smpp"  and message="Map Dialog User Abort User Reason: App procedure cancelled" and sessionStatus=false ) as gbcancelussd group by operator,_timestamp ) as canceltotal on ussdtotal.operator=canceltotal.operator and ussdtotal._timestamp=canceltotal._timestamp 
	left join ( 
		select operator, _timestamp, count(sessionStatus) as timeoutcount from ( 
			select sessionStatus,operator,getDateTimestamp(timestamp)  as _timestamp from daily_ussd_analysis_raw  where (type ="USRRSP" and ussdType="smpp" and operator="tatadocomo" and message="Map Dialog User Abort User Reason: User specific reason" and sessionStatus=false) or (type ="USRRSP" and ussdType="smpp" and operator!="tatadocomo" and message="Timer expired for N/W initaited USSRN" and sessionStatus=false) ) as gbtimeoutussd group by operator,_timestamp ) as timeouttotal on ussdtotal.operator=timeouttotal.operator and ussdtotal._timestamp=timeouttotal._timestamp ) as ussdsmpp;

		
        INSERT INTO table ussd_logs_summary select getDateString(_timestamp),operator,totalcount,yescount,nocount,invalidcount,cancelcount,timeoutcount,(totalcount-(yescount+nocount+invalidcount+cancelcount+timeoutcount)) as unknown,_timestamp from ( select ussdtotal.operator, ussdtotal._timestamp ,	checkNullforLong(totalcount) as totalcount,	checkNullforLong(yescount) as yescount,	checkNullforLong(nocount) as nocount,	checkNullforLong(invalidcount) as invalidcount,	checkNullforLong(cancelcount) as cancelcount,	checkNullforLong(timeoutcount) as timeoutcount	from (	select operator, _timestamp, count(sessionStatus) as totalcount	from ( select sessionStatus,operator,getDateTimestamp(timestamp)  as _timestamp  from daily_ussd_analysis_raw where type ="SUBYN" and ussdType="http") as gbtotalussd group by operator,_timestamp ) as ussdtotal left join ( select operator, _timestamp, count(sessionStatus) as yescount	from (	select sessionStatus,operator,getDateTimestamp(timestamp)  as _timestamp  from daily_ussd_analysis_raw where type ="USRRSP" and ussdType="http" and ( LOWER(message) = "1" or LOWER(message) = "ok" or LOWER(message) = "yes" or LOWER(message) = "y") ) as gbyesussd group by operator,_timestamp ) as yestotal on ussdtotal.operator=yestotal.operator and ussdtotal._timestamp=yestotal._timestamp left join ( select operator, _timestamp, count(sessionStatus) as nocount 	from (	select sessionStatus,operator,getDateTimestamp(timestamp)  as _timestamp  from daily_ussd_analysis_raw where type ="USRRSP" and ussdType="http" and ( LOWER(message) = "2" or LOWER(message) = "no" or LOWER(message) = "n")	) as gbnoussd group by operator,_timestamp	) as nototal on ussdtotal.operator=nototal.operator and ussdtotal._timestamp=nototal._timestamp	left join (	select operator, _timestamp, count(sessionStatus) as invalidcount from (	select sessionStatus,operator,getDateTimestamp(timestamp)  as _timestamp  	from daily_ussd_analysis_raw where type ="USRRSP" and ussdType="http" and ( LOWER(message) != "1" and LOWER(message) != "ok" and LOWER(message) != "yes" and LOWER(message) != "y"  and  LOWER(message) != "2" and LOWER(message) != "no" and LOWER(message) != "n" ) and message IS NOT NULL ) as gbinvalidussd group by operator,_timestamp	) as invalidtotal on ussdtotal.operator=invalidtotal.operator and ussdtotal._timestamp=invalidtotal._timestamp left join ( select operator, _timestamp, count(sessionStatus) as cancelcount 	from ( select sessionStatus, operator,getDateTimestamp(timestamp)  as _timestamp  from daily_ussd_analysis_raw where type ="USRRSP" and ussdType="http" and message="Map Dialog User Abort User Reason: App procedure cancelled"  ) as gbcancelussd group by operator,_timestamp ) as canceltotal on ussdtotal.operator=canceltotal.operator and ussdtotal._timestamp=canceltotal._timestamp left join (	select operator, _timestamp, count(sessionStatus) as timeoutcount	from ( select sessionStatus,operator,getDateTimestamp(timestamp)  as _timestamp  from daily_ussd_analysis_raw 	where type ="USRRSP" and ussdType="http" and message="Timer expired for N/W initaited USSRN" ) as gbtimeoutussd group by operator,_timestamp	) as timeouttotal on ussdtotal.operator=timeouttotal.operator and ussdtotal._timestamp=timeouttotal._timestamp ) as ussdhttp;

	 create temporary table ussd_logs_summary_per_operator using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_USSD_ANALYSIS_PER_OPERATER", schema "message STRING -i,day STRING -i,count INTEGER -i, operator STRING -i, code STRING -i,_timestamp LONG -i", primaryKeys "day, operator, message");

		
		        create temporary table ussd_logs_summary_total using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_TOTAL_USSD_ANALYSIS", schema "day STRING -i, totalcount LONG -i,yescount LONG -i,nocount LONG -i,invalidcount LONG -i,cancelcount LONG -i,timeoutcount LONG -i,unknown LONG -i, _timestamp LONG -i", primaryKeys "day");

		
			 INSERT INTO table ussd_logs_summary_total 
		SELECT day,SUM(totalcount),SUM(yescount),SUM(nocount),SUM(invalidcount),SUM(cancelcount),SUM(timeoutcount),SUM(unknown),_timestamp from ussd_logs_summary GROUP BY day,_timestamp;
		
		
		
		
		
	 create temporary table ussd_logs_summary_per_operator using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_USSD_ANALYSIS_PER_OPERATER", schema "message STRING -i,day STRING -i,count INTEGER -i, operator STRING -i, code STRING -i,_timestamp LONG -i", primaryKeys "day, operator, message");
	 
		create temporary table ussd_logs_error_codes using CarbonAnalytics options (tableName "COM_WSO2TELCO_USSD_ERROR_CODES_PER_OPERATER", schema "operator STRING -i,message STRING -i,code STRING -i, isEnnable BOOLEAN -i", primaryKeys "operator, message");


	INSERT INTO table ussd_logs_summary_per_operator 
	select aaa.message,getDateString(aaa._timestamp),count(aaa.sequenceNo),aaa.operator,first(aaa.code),aaa._timestamp 
	from(
		select ussdData._timestamp,ussdData.operator,ussdData.message,ussdData.type,ussdData.sequenceNo,errorCode.code 
		from(
 			 select getDateTimestamp(timestamp) as _timestamp,operator,message,type,sequenceNo 
 			from  daily_ussd_analysis_raw 
 			where type='USRRSP' and sessionStatus=false and ussdType="smpp"
 		)  as ussdData 
 		
 		left join 
 		
 		(
 		select code,operator,message
 		from (
 			select code,operator,message 
			from ussd_logs_error_codes 
			where isEnnable=true) as aaa 
			
			)as errorCode on ussdData.operator = errorCode.operator and ussdData.message = errorCode.message
 		
 		
 		) as aaa  group by _timestamp,operator,message;

        INCREMENTAL_TABLE_COMMIT daily_ussd_ussdLogs;
    </Script>
    <CronExpression>0 0 3 1/1 * ? *</CronExpression>
</Analytics>
